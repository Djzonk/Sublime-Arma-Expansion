{
    "scope": "source.sqf, source.c++",
    "completions": [
        { "trigger": "EFUNC()\tGets full function identifier for external functions", "contents": "EFUNC(${1:COMPONENT},${2:NAME})" },
        { "trigger": "EGVAR()\tGets full variable identifier for a external global variable", "contents": "EGVAR(${1:COMPONENT},${2:TAG})" },
        { "trigger": "ERROR()\tRecord a critical error in the RPT log", "contents": "ERROR(${1:MESSAGE})" },
        { "trigger": "ERROR_MSG()\tRecord a critical error in the RPT log and display on screen error message", "contents": "ERROR_MSG(${1:MESSAGE})" },
        { "trigger": "ERROR_WITH_TITLE()\tRecord a critical error in the RPT log", "contents": "ERROR_WITH_TITLE(${1:TITLE},${1:MESSAGE})" },
        { "trigger": "FUNC()\tGets full function identifier", "contents": "FUNC(${1:NAME})" },
        { "trigger": "GVAR()\tGets full variable identifier for a global variable", "contents": "GVAR(${1:TAG})" },
        { "trigger": "INFO()\tRecord a message without file and line number in the RPT log", "contents": "INFO(${1:MESSAGE})" },
        { "trigger": "LOG()\tLog a debug message into the RPT log", "contents": "LOG(${1:MESSAGE})" },
        { "trigger": "MESSAGE_WITH_TITLE()\tRecord a single line in the RPT log", "contents": "MESSAGE_WITH_TITLE(${1:TITLE},${1:MESSAGE})" },
        { "trigger": "PATHTOEF()\tUsed to reference external files. If in folder deeper then the component folder use \"foldname\\filname\"", "contents": "PATHTOEF(${1:COMPONENT},${2:NAME})" },
        { "trigger": "PATHTOF()\tUsed to reference files. If in folder deeper then the component folder use \"foldname\\filname\"", "contents": "PATHTOF(${1:NAME})" },
        { "trigger": "QEFUNC()\tSame as EFUNC but wrapped in \"\"", "contents": "QEFUNC(${1:COMPONENT},${2:NAME})" },
        { "trigger": "QEGVAR()\tSame as EGVAR but wrapped in \"\"", "contents": "QEGVAR(${1:COMPONENT},${2:TAG})" },
        { "trigger": "QFUNC()\tSame as FUNC but wrapped in \"\"", "contents": "QFUNC(${1:NAME})" },
        { "trigger": "QGVAR()\tSame as GVAR but wrapped in \"\"", "contents": "QGVAR(${1:TAG})" },
        { "trigger": "QPATHTOEF()\tSame as PATHTOEF but wrapped in \"\"", "contents": "QPATHTOEF(${1:COMPONENT},${2:NAME})" },
        { "trigger": "QPATHTOF()\tSame as PATHTOF but wrapped in \"\"", "contents": "QPATHTOF(${1:NAME})" },
        { "trigger": "QQFUNC()\tSame as FUNC but wrapped in 2 sets of \"\"", "contents": "QQFUNC(${1:NAME})" },
        { "trigger": "QQQEFUNC()\tSame as EFUNC but wrapped in 2 sets of \"\"", "contents": "QQQEFUNC(${1:COMPONENT},${2:NAME})" },
        { "trigger": "TRACE_1()\tLog a message and 1-8 variables to the RPT log", "contents": "TRACE_1(${1:MESSAGE},${2:ARG1})" },
        { "trigger": "TRACE_2()\tLog a message and 1-8 variables to the RPT log", "contents": "TRACE_2(${1:MESSAGE},${2:ARG1},${3:ARG2})" },
        { "trigger": "TRACE_3()\tLog a message and 1-8 variables to the RPT log", "contents": "TRACE_3(${1:MESSAGE},${2:ARG1},${3:ARG2},${4:ARG3})" },
        { "trigger": "TRACE_4()\tLog a message and 1-8 variables to the RPT log", "contents": "TRACE_4(${1:MESSAGE},${2:ARG1},${3:ARG2},${4:ARG3},${5:ARG4})" },
        { "trigger": "TRACE_5()\tLog a message and 1-8 variables to the RPT log", "contents": "TRACE_5(${1:MESSAGE},${2:ARG1},${3:ARG2},${4:ARG3},${5:ARG4},${6:ARG5})" },
        { "trigger": "TRACE_6()\tLog a message and 1-8 variables to the RPT log", "contents": "TRACE_6(${1:MESSAGE},${2:ARG1},${3:ARG2},${4:ARG3},${5:ARG4},${6:ARG5},${7:ARG6})" },
        { "trigger": "TRACE_7()\tLog a message and 1-8 variables to the RPT log", "contents": "TRACE_7(${1:MESSAGE},${2:ARG1},${3:ARG2},${4:ARG3},${5:ARG4},${6:ARG5},${7:ARG6},${8:ARG7})" },
        { "trigger": "TRACE_8()\tLog a message and 1-8 variables to the RPT log", "contents": "TRACE_8(${1:MESSAGE},${2:ARG1},${3:ARG2},${4:ARG3},${5:ARG4},${6:ARG5},${7:ARG6},${8:ARG7},${8:ARG8})" },
        { "trigger": "WARNING()\tRecord a non-critical error in the RPT log", "contents": "WARNING(${1:MESSAGE})" },
        { "trigger": "localize ELSTRING()", "contents": "localize ELSTRING(${1:COMPONENT},${1:TAG})" },
        { "trigger": "localize LSTRING()", "contents": "localize LSTRING(${1:TAG})" }
    ]
}